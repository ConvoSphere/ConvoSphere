# Pre-commit configuration for AI Assistant Platform
# This file configures pre-commit hooks that run before each commit

repos:
  # Pre-commit hooks repository
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # General hooks
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-json
      - id: check-toml
      - id: debug-statements
      - id: name-tests-test
      - id: requirements-txt-fixer
      - id: fix-byte-order-marker
      - id: mixed-line-ending
      - id: check-ast
      - id: detect-private-key
      - id: forbid-new-submodules
      - id: no-commit-to-branch
        args: [--branch, main, --branch, master]
      - id: check-added-large-files
        args: [--maxkb, "1000"]

  # Ruff for linting and formatting
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.6
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format

  # Bandit for security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, ., -f, json, -o, bandit-report.json]
        exclude: ^(tests/|venv/|\.venv/|env/|\.env/|.*/migrations/.*)$

  # MyPy for type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.7.1
    hooks:
      - id: mypy
        additional_dependencies: [types-all]
        exclude: ^(tests/|venv/|\.venv/|env/|\.env/|.*/migrations/.*)$

  # Black for code formatting (backup to ruff-format)
  - repo: https://github.com/psf/black
    rev: 23.11.0
    hooks:
      - id: black
        language_version: python3.11

  # isort for import sorting (backup to ruff)
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [--profile=black]

  # Pytest for running tests (manual stage)
  - repo: local
    hooks:
      - id: pytest
        name: pytest
        entry: pytest
        language: system
        pass_filenames: false
        always_run: true
        args: [--tb=short, --strict-markers]
        stages: [manual]

  # Custom security check (manual stage)
  - repo: local
    hooks:
      - id: security-check
        name: Security Check
        entry: python scripts/security_check.py
        language: system
        pass_filenames: false
        always_run: true
        stages: [manual]

  # Custom code quality check (manual stage)
  - repo: local
    hooks:
      - id: code-quality
        name: Code Quality Check
        entry: python scripts/code_quality_check.py
        language: system
        pass_filenames: false
        always_run: true
        stages: [manual]

# Global configuration
default_language_version:
  python: python3.11