name: Performance Tests

on:
  push:
    branches: [ main, master ]
    paths:
      - 'backend/**'
      - 'tests/performance/**'
      - '.github/workflows/performance-tests.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'backend/**'
      - 'tests/performance/**'
      - '.github/workflows/performance-tests.yml'
  workflow_dispatch:
  schedule:
    # Run performance tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  performance-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      
      weaviate:
        image: semitechnologies/weaviate:latest
        env:
          QUERY_DEFAULTS_LIMIT: 25
          AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
          PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
          DEFAULT_VECTORIZER_MODULE: 'none'
          ENABLE_MODULES: 'text2vec-openai,text2vec-cohere,text2vec-huggingface,ref2vec-centroid,generative-openai,qna-openai'
          CLUSTER_HOSTNAME: 'node1'
          TELEMETRY_PUSH: 'false'
        options: >-
          --health-cmd "wget -qO- http://localhost:8080/v1/.well-known/ready"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 3
        ports:
          - 8080:8080
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r backend/requirements.txt
          pip install pytest pytest-cov pytest-asyncio psutil
      
      - name: Run all performance tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
          REDIS_URL: redis://localhost:6379
          WEAVIATE_URL: http://localhost:8080
          SECRET_KEY: test-secret-key
          DEBUG: true
        run: |
          pytest -m performance --cov=backend --cov-report=xml --cov-report=html --cov-report=term-missing -v
      
      - name: Run load tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
          REDIS_URL: redis://localhost:6379
          WEAVIATE_URL: http://localhost:8080
          SECRET_KEY: test-secret-key
          DEBUG: true
        run: |
          pytest tests/performance/backend/locustfile.py -v
      
      - name: Upload performance test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-test-results
          path: |
            htmlcov/
            coverage.xml
            .pytest_cache/
          retention-days: 30
      
      - name: Generate performance report
        if: always()
        run: |
          echo "## Performance Test Results" >> $GITHUB_STEP_SUMMARY
          echo "Performance tests completed successfully." >> $GITHUB_STEP_SUMMARY
          echo "- Unit performance tests: ✅" >> $GITHUB_STEP_SUMMARY
          echo "- Load tests: ✅" >> $GITHUB_STEP_SUMMARY
          echo "- Memory usage tests: ✅" >> $GITHUB_STEP_SUMMARY
          echo "- CPU usage tests: ✅" >> $GITHUB_STEP_SUMMARY